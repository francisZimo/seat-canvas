{"version":3,"sources":["uni-app:///main.js",null,"webpack:////Users/wangyongju/Documents/个人资料/seat-canvas/pages/index/index.vue?9236","webpack:////Users/wangyongju/Documents/个人资料/seat-canvas/pages/index/index.vue?ea06","webpack:////Users/wangyongju/Documents/个人资料/seat-canvas/pages/index/index.vue?8a91","uni-app:///pages/index/index.vue","webpack:////Users/wangyongju/Documents/个人资料/seat-canvas/pages/index/index.vue?2074","webpack:////Users/wangyongju/Documents/个人资料/seat-canvas/pages/index/index.vue?20a8"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page","console","data","wrapperBox","width","height","canvasInfo","wrapperStyleBase","canvasWrapperStyle","scaleRatio","lastTapTime","lastTapPos","x","y","baseXPoint","baseYPoint","canvasStyle","canvasContext","selectedSeat","touchStartX","touchStartY","offsetX","offsetY","isMoving","canvasContext1","tempImg","onLoad","mounted","methods","initOffscreenCanvas","type","context","initCanvas","rectCanvas","scale","calculateBoundingRectangle","minX","minY","maxX","maxY","drawRectangle","payload","drawText","name","drawCircle","radius","drawPolygon","info","points","handleShapeRegion","handleStage","handleRegion","handleRow","handleSeat","drawData","seatList","isDraw","zoomIn","onCanvasTouchStart","uni","canvasId","success","initialDistance","touches","cOffsetX","drawCanvas","onCanvasTouchMove","onCanvasTouchEnd"],"mappings":";;;;;;;;;;;;;AAAA;AAGA;AACA;AAHA;AACAA,EAAE,CAACC,iCAAiC,GAAGC,mBAAmB;AAG1DC,UAAU,CAACC,cAAI,CAAC,C;;;;;;;;;;;;;ACLhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8H;AAC9H;AACyD;AACL;AACsC;;;AAG1F;AACgN;AAChN,gBAAgB,iNAAU;AAC1B,EAAE,2EAAM;AACR,EAAE,4FAAM;AACR,EAAE,qGAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,gGAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAm0B,CAAgB,myBAAG,EAAC,C;;;;;;;;;;;;;;;;;;ACQv1B;AAGA;;;;;;;;;AAKA;AACA;AACAC;AAAA,eACA;EACAC;IACA;MACAC;QACAC;QACAC;MACA;MACAC;MAAA;MACAC;MACAC;MACAC;MAAA;MACAC;MACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACA;MACAtB;MACA;MACAC;IACA;EACA;EACAsB;IACA;IACA;IACA;IACA;IACA;;IAEA;;IAGA;IACA;IACA;IACA;EAEA;;EAEAC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC;MACA5B;MACA;QACA6B;QACA1B;QACAC;MACA;MACA;MACA;MACAJ;MACA8B;MACAA;MAEAA;MACA;IAEA;IACAC;MACA;MACA;MACA/B;MACA,IACAW,IAIAqB,WAJArB;QACAC,IAGAoB,WAHApB;QACAT,QAEA6B,WAFA7B;QACAC,SACA4B,WADA5B;MAEA;MACA;MACA;MACA;QACA6B;MACA;QACAA;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;MACA;QACA;QACA;QACA;QACA;UACA;QAAA;QAEA;UACA;QAAA;QAGA;QACA;QACAC;QACAC;QACAC;QACAC;MACA;MAEA;MACA;MAEA;QACA3B;QACAC;QACAT;QACAC;MACA;IACA;IACA;IACAmC;MACA,IACAT,UAKAU,QALAV;QACAnB,IAIA6B,QAJA7B;QACAC,IAGA4B,QAHA5B;QACAT,QAEAqC,QAFArC;QACAC,SACAoC,QADApC;MAEA0B;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;IACA;IACA;IACAW;MACA,IACAX,UAIAU,QAJAV;QACAnB,IAGA6B,QAHA7B;QACAC,IAEA4B,QAFA5B;QACA8B,OACAF,QADAE;MAEAZ;MACAA;MACAA;IACA;IACA;IACAa;MACA,IACAb,UAIAU,QAJAV;QACAnB,IAGA6B,QAHA7B;QACAC,IAEA4B,QAFA5B;QACAgC,SACAJ,QADAI;MAEAd;MACAA;MACAA;MACAA;MACAA;IAEA;IACA;IACAe;MACA,IACAf,UAEAgB,KAFAhB;QACAiB,SACAD,KADAC;MAEA;QACA;MACA;MACAjB;MACAA;MAEA;QACAA;MACA;MACAA;MACAA;MACAA;IACA;IACAkB;MAAA;MACA;MACA;MACA;QACA;UACArC;UACAC;QACA;MACA;MACA;QACAkB;QACAiB;MACA;IACA;IAGAE;MAEA;QACAnB;QACAnB;QACAC;QACAT;QACAC;MACA;MAEA;MACA;QACA0B;QACAY;QACA/B;QACAC;MACA;MACA;IACA;IACAsC;MACA;MACA;MACA;QACA;UACApB;UACAnB;UACAC;UACAT;UACAC;QACA;MACA;MAEA;QACA;UACA0B;UACAnB;UACAC;UACAgC;QACA;MACA;IAGA;IACA;IACAO;MACA;MACA;MACA;QACArB;QACAnB;QACAC;QACA8B;MACA;MACA;IACA;IAEA;IACAU;MACA;MACA;QACAtB;QACAc;QACAjC;QACAC;MACA;MACA;IACA;IACAyC;MAAA;MAAA;MACA;MACAC;QACA;QACA;UACAzB;QACA;QACA;UACAA;QACA;QACA;UACAA;QACA;QACA;UACAA;QACA;QACA;UACAA;QACA;QACA;UACA;QACA;QAEA;UACA7B;UACA;QACA;QAEA;UACA;QACA;QAEA;UACA;QACA;QACA;UACA;QACA;MACA;MAEAuD;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAGA;IAEA;IACA;IACAC;MACAxD;IAEA;IAEAyD;MAAA;MACA;MACAzD;MACA;MAEA0D;QACA/C;QACAC;QACA;QACA;QACA;QACA;QACA+C;QACAC;UACA;UACA5D;UACA;QACA;MACA;MAEA;QACA;QACA;QACA;QACA6D;QACA7D;QACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAA;MACA;MACA;MACA;MACA,yGACA8D;QACA9D;;QAGA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAEAA,6CACA+D;QACA;QACA;QACA;QACA;UACApD;UACAC;QACA;MACA;QACAZ;QACA;QACA;UACAW;UACAC;QACA;QACAZ;MACA;;MAEA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;IAGA;IACAgE;MACAhE;MACA;QACAA;QAEA;QAEA,wFACAI;QACA;QACA;MACA;;MAEA;;MAEA;MACA;MACA;;MAEA;MACA;IACA;IACA6D;MACAjE;MACA;MACA;QACA;QACA;QAEA;QACA;QACA;UACAA;QACA;QACAA;QACA;QACA;QACA;QACA;QACA;MACA;MACA;QACA;QACA;;QAEA;QACA;;QAEA;QACAiC;;QAEA;QACAA;;QAIA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA4B;MAEA;IACA;IACAK;MACAlE;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAEA;EAEA;AACA;AAAA,2B;;;;;;;;;;;;;AChkBA;AAAA;AAAA;AAAA;AAA0jD,CAAgB,07CAAG,EAAC,C;;;;;;;;;;;ACA9kD;AACA,OAAO,KAAU,EAAE,kBAKd","file":"pages/index/index.js","sourcesContent":["import 'uni-pages';\n// @ts-ignore\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;\nimport Vue from 'vue'\nimport Page from './pages/index/index.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./index.vue?vue&type=template&id=57280228&scoped=true&\"\nvar renderjs\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=57280228&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"57280228\",\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"pages/index/index.vue\"\nexport default component.exports","export * from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--17-0!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=template&id=57280228&scoped=true&\"","var components\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=script&lang=js&\"","<template>\r\n\t<view class=\"content\" :style=\"{ width: wrapperBox.width + 'px', height: wrapperBox.height + 'px' }\">\r\n\t\t<canvas class=\"canvas-box\" :style=\"canvasStyle\" canvas-id=\"seatCanvas\" @touchstart=\"onCanvasTouchStart\"\r\n\t\t\t@touchmove=\"onCanvasTouchMove\" id=\"seatCanvas\" @touchend=\"onCanvasTouchEnd\"></canvas>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\timport {\r\n\t\tseatInfo\r\n\t} from './seatData.js'\r\n\timport {\r\n\t\tthrottle\r\n\t} from 'lodash'\r\n\r\n\r\n\tlet initialDistance = null;\r\n\tlet scale = 1;\r\n\tconsole.log(seatInfo, '==seatInfo')\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\twrapperBox: {\r\n\t\t\t\t\twidth: 400,\r\n\t\t\t\t\theight: 400\r\n\t\t\t\t},\r\n\t\t\t\tcanvasInfo: {}, // 当前画布信息\r\n\t\t\t\twrapperStyleBase: '',\r\n\t\t\t\tcanvasWrapperStyle: '',\r\n\t\t\t\tscaleRatio: 1, // canvas 缩放比例\r\n\t\t\t\tlastTapTime: null,\r\n\t\t\t\tlastTapPos: {\r\n\t\t\t\t\tx: null,\r\n\t\t\t\t\ty: null\r\n\t\t\t\t},\r\n\t\t\t\tbaseXPoint: 0,\r\n\t\t\t\tbaseYPoint: 0,\r\n\t\t\t\tcanvasStyle: 'border: 1px solid red',\r\n\t\t\t\tcanvasContext: null, // canvas上下文对象\r\n\t\t\t\tselectedSeat: null, // 当前选中的座位\r\n\t\t\t\ttouchStartX: 0, // 触摸起始点X坐标\r\n\t\t\t\ttouchStartY: 0, // 触摸起始点Y坐标\r\n\t\t\t\toffsetX: 0, // X轴偏移量\r\n\t\t\t\toffsetY: 0, // Y轴偏移量\r\n\t\t\t\tisMoving: false,\r\n\t\t\t\tcanvasContext1: null,\r\n\t\t\t\ttempImg: null //暂存图片\r\n\t\t\t}\r\n\t\t},\r\n\t\tonLoad() {\r\n\t\t\tconst systemInfo = uni.getSystemInfoSync();\r\n\t\t\tthis.wrapperBox = {\r\n\t\t\t\twidth: systemInfo.windowWidth - 20,\r\n\t\t\t\t// height: systemInfo.windowHeight,\r\n\t\t\t\theight: systemInfo.windowWidth - 20\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted() {\r\n\t\t\tthis.initCanvas()\r\n\t\t\tthis.initOffscreenCanvas()\r\n\t\t\t// 获取canvas上下文对象\r\n\t\t\tthis.canvasContext = uni.createCanvasContext('seatCanvas', this);\r\n\t\t\tthis.canvasContext.scale(this.scaleRatio, this.scaleRatio)\r\n\r\n\t\t\t// this.canvasContext.getContext('2d')\r\n\r\n\r\n\t\t\tthis.drawData()\r\n\t\t\t// this.canvasContext1\r\n\t\t\t// this.canvasContext1.drawImage(canvasContext, 0, 0,\r\n\t\t\t// \t500, 500);\r\n\r\n\t\t},\r\n\r\n\t\tmethods: {\r\n\t\t\t// copyToMain() {\r\n\t\t\t// \t//从离屏画布复制到主画布上面显示\r\n\t\t\t// \tlet that = this;\r\n\t\t\t// \tuni.canvasToTempFilePath({\r\n\t\t\t// \t\tx: 0,\r\n\t\t\t// \t\ty: 0,\r\n\t\t\t// \t\twidth: this.scale * 300,//假设初始大小为300*300\r\n\t\t\t// \t\theight: this.scale * 300,\r\n\t\t\t// \t\tdestWidth: this.scale * 300,//目标大小也要按照比例缩放\r\n\t\t\t// \t\tdestHeight: this.scale * 300,\r\n\t\t\t// \t\tcanvasId: 'offscreenCanvas',\r\n\t\t\t// \t\tsuccess: (res) => {\r\n\t\t\t// \t\t\tthat.mainCtx.drawImage(res.tempFilePath, 0, 0, this.scale * 300, this.scale * 300);//假设我们想让它始终显示在主画布中央位置，那就需要计算一下位置。\r\n\t\t\t// \t\t\tthat.mainCtx.draw();\r\n\t\t\t// \t\t\tconsole.log('h绘制完成', this.scale * 300)\r\n\t\t\t// \t\t}\r\n\t\t\t// \t}, this)\r\n\t\t\t// },\r\n\t\t\t// 创建离屏canvas\r\n\t\t\tinitOffscreenCanvas() {\r\n\t\t\t\tconsole.log(this.canvasInfo, '==canvasInfo')\r\n\t\t\t\tconst canvas = uni.createOffscreenCanvas({\r\n\t\t\t\t\ttype: '2d',\r\n\t\t\t\t\twidth: this.canvasInfo.width,\r\n\t\t\t\t\theight: this.canvasInfo.height\r\n\t\t\t\t})\r\n\t\t\t\t// 获取 context。注意这里必须要与创建时的 type 一致\r\n\t\t\t\tconst context = canvas.getContext('2d')\r\n\t\t\t\tconsole.log(context, '===contextxx')\r\n\t\t\t\tcontext.clearRect(0, 0, 300, 150)\r\n\t\t\t\tcontext.clearRect(0, 0, 300, 300)\r\n\r\n\t\t\t\tcontext.fillText('MINA', 100, 100)\r\n\t\t\t\tthis.canvasContext1 = context\r\n\r\n\t\t\t},\r\n\t\t\tinitCanvas() {\r\n\t\t\t\tconst rectCanvas = this.calculateBoundingRectangle()\r\n\t\t\t\tthis.canvasInfo = rectCanvas;\r\n\t\t\t\tconsole.log(rectCanvas, '==rectCanvas')\r\n\t\t\t\tconst {\r\n\t\t\t\t\tx,\r\n\t\t\t\t\ty,\r\n\t\t\t\t\twidth,\r\n\t\t\t\t\theight\r\n\t\t\t\t} = rectCanvas\r\n\t\t\t\tthis.baseXPoint = x;\r\n\t\t\t\tthis.baseYPoint = y;\r\n\t\t\t\tlet scale = 1;\r\n\t\t\t\tif (width > height) {\r\n\t\t\t\t\tscale = this.wrapperBox.width / width\r\n\t\t\t\t} else {\r\n\t\t\t\t\tscale = this.wrapperBox.height / height\r\n\t\t\t\t}\r\n\t\t\t\tthis.scaleRatio = scale\r\n\t\t\t\tconst style = `width: ${width}px; height: ${height}px;`\r\n\t\t\t\tthis.canvasStyle = style;\r\n\t\t\t\tthis.wrapperStyleBase = this.canvasWrapperStyle = style;\r\n\t\t\t},\r\n\r\n\t\t\tcalculateBoundingRectangle() {\r\n\t\t\t\tlet minX = Infinity;\r\n\t\t\t\tlet minY = Infinity;\r\n\t\t\t\tlet maxX = -Infinity;\r\n\t\t\t\tlet maxY = -Infinity;\r\n\t\t\t\tconst data = seatInfo.datas\r\n\t\t\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\t\t\tconst item = data[i];\r\n\t\t\t\t\tconst x = item.p.location.x;\r\n\t\t\t\t\tconst y = item.p.location.y;\r\n\t\t\t\t\tif (!item.p.width) {\r\n\t\t\t\t\t\t// console.log(item)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!item.p.height) {\r\n\t\t\t\t\t\t// console.log(item)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst width = item.p.width || 0;\r\n\t\t\t\t\tconst height = item.p.height || 0;\r\n\t\t\t\t\tminX = Math.min(minX, x);\r\n\t\t\t\t\tminY = Math.min(minY, y);\r\n\t\t\t\t\tmaxX = Math.max(maxX, x + width);\r\n\t\t\t\t\tmaxY = Math.max(maxY, y + height);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst width = maxX - minX;\r\n\t\t\t\tconst height = maxY - minY;\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tx: minX,\r\n\t\t\t\t\ty: minY,\r\n\t\t\t\t\twidth: width,\r\n\t\t\t\t\theight: height\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t// 绘制矩形\r\n\t\t\tdrawRectangle(payload) {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tcontext,\r\n\t\t\t\t\tx,\r\n\t\t\t\t\ty,\r\n\t\t\t\t\twidth,\r\n\t\t\t\t\theight\r\n\t\t\t\t} = payload;\r\n\t\t\t\tcontext.beginPath();\r\n\t\t\t\tcontext.setStrokeStyle('#000000'); // 设置边框颜色\r\n\t\t\t\tcontext.setLineWidth(2); // 设置边框宽度\r\n\t\t\t\tcontext.rect(x, y, width, height);\r\n\t\t\t\tcontext.stroke(); // 绘制边框\r\n\t\t\t\tcontext.closePath();\r\n\t\t\t\tcontext.stroke();\r\n\t\t\t},\r\n\t\t\t// 绘制文本\r\n\t\t\tdrawText(payload) {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tcontext,\r\n\t\t\t\t\tx,\r\n\t\t\t\t\ty,\r\n\t\t\t\t\tname\r\n\t\t\t\t} = payload;\r\n\t\t\t\tcontext.setTextAlign('center');\r\n\t\t\t\tcontext.setTextBaseline('middle');\r\n\t\t\t\tcontext.fillText(name, x, y);\r\n\t\t\t},\r\n\t\t\t// 绘制圆形\r\n\t\t\tdrawCircle(payload) {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tcontext,\r\n\t\t\t\t\tx,\r\n\t\t\t\t\ty,\r\n\t\t\t\t\tradius,\r\n\t\t\t\t} = payload;\r\n\t\t\t\tcontext.beginPath();\r\n\t\t\t\tcontext.arc(x, y, radius, 0, 2 * Math.PI);\r\n\t\t\t\tcontext.setStrokeStyle()\r\n\t\t\t\tcontext.stroke()\r\n\t\t\t\tcontext.closePath();\r\n\r\n\t\t\t},\r\n\t\t\t// 绘制多边形\r\n\t\t\tdrawPolygon(info) {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tcontext,\r\n\t\t\t\t\tpoints\r\n\t\t\t\t} = info\r\n\t\t\t\tif (points.length < 3) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tcontext.beginPath();\r\n\t\t\t\tcontext.moveTo(points[0].x, points[0].y);\r\n\r\n\t\t\t\tfor (let i = 1; i < points.length; i++) {\r\n\t\t\t\t\tcontext.lineTo(points[i].x, points[i].y);\r\n\t\t\t\t}\r\n\t\t\t\tcontext.setStrokeStyle('black')\r\n\t\t\t\tcontext.stroke()\r\n\t\t\t\tcontext.closePath();\r\n\t\t\t},\r\n\t\t\thandleShapeRegion(info) {\r\n\t\t\t\tconst position = info.p\r\n\t\t\t\tconst positionList = position.points;\r\n\t\t\t\tconst points = positionList.map((item) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tx: item.x - this.baseXPoint,\r\n\t\t\t\t\t\ty: item.y - this.baseYPoint\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tthis.drawPolygon({\r\n\t\t\t\t\tcontext: this.canvasContext,\r\n\t\t\t\t\tpoints\r\n\t\t\t\t})\r\n\t\t\t},\r\n\r\n\r\n\t\t\thandleStage(stageInfo) {\r\n\r\n\t\t\t\tconst StagePayload = {\r\n\t\t\t\t\tcontext: this.canvasContext,\r\n\t\t\t\t\tx: stageInfo.p.location.x - this.baseXPoint,\r\n\t\t\t\t\ty: stageInfo.p.location.y - this.baseYPoint,\r\n\t\t\t\t\twidth: stageInfo.p.width,\r\n\t\t\t\t\theight: stageInfo.p.height,\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.drawRectangle(StagePayload)\r\n\t\t\t\tconst textInfo = {\r\n\t\t\t\t\tcontext: this.canvasContext,\r\n\t\t\t\t\tname: stageInfo.p.name,\r\n\t\t\t\t\tx: StagePayload.x + StagePayload.width / 2,\r\n\t\t\t\t\ty: StagePayload.y + StagePayload.height / 2\r\n\t\t\t\t}\r\n\t\t\t\tthis.drawText(textInfo)\r\n\t\t\t},\r\n\t\t\thandleRegion(info) {\r\n\t\t\t\tconst style = info.s\r\n\t\t\t\tconst position = info.p\r\n\t\t\t\tif (style['vector.shape'] && style['vector.shape'] === 'rectangle') {\r\n\t\t\t\t\tthis.drawRectangle({\r\n\t\t\t\t\t\tcontext: this.canvasContext,\r\n\t\t\t\t\t\tx: position.location.x - this.baseXPoint,\r\n\t\t\t\t\t\ty: position.location.y - this.baseYPoint,\r\n\t\t\t\t\t\twidth: position.width,\r\n\t\t\t\t\t\theight: position.height,\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (style['vector.shape'] && style['vector.shape'] === 'circle') {\r\n\t\t\t\t\tthis.drawCircle({\r\n\t\t\t\t\t\tcontext: this.canvasContext,\r\n\t\t\t\t\t\tx: position.location.x - this.baseXPoint + position.width / 2,\r\n\t\t\t\t\t\ty: position.location.y - this.baseYPoint + position.height / 2,\r\n\t\t\t\t\t\tradius: position.height / 2\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t},\r\n\t\t\t// 处理row提示\r\n\t\t\thandleRow(info) {\r\n\t\t\t\tconst style = info.s\r\n\t\t\t\tconst position = info.p\r\n\t\t\t\tconst payload = {\r\n\t\t\t\t\tcontext: this.canvasContext,\r\n\t\t\t\t\tx: position.location.x - this.baseXPoint + (style['label.xoffset'] || 0),\r\n\t\t\t\t\ty: position.location.y - this.baseYPoint + (style['label.yoffset'] || 0),\r\n\t\t\t\t\tname: position.name\r\n\t\t\t\t}\r\n\t\t\t\tthis.drawText(payload)\r\n\t\t\t},\r\n\r\n\t\t\t// 处理座位\r\n\t\t\thandleSeat(info) {\r\n\t\t\t\tconst position = info.p;\r\n\t\t\t\tconst circleInfo = {\r\n\t\t\t\t\tcontext: this.canvasContext,\r\n\t\t\t\t\tradius: position.height / 2,\r\n\t\t\t\t\tx: position.location.x - this.baseXPoint,\r\n\t\t\t\t\ty: position.location.y - this.baseYPoint,\r\n\t\t\t\t}\r\n\t\t\t\tthis.drawCircle(circleInfo)\r\n\t\t\t},\r\n\t\t\tdrawData(isDraw = true) {\r\n\t\t\t\tconst seatList = seatInfo.datas;\r\n\t\t\t\tseatList.forEach((item) => {\r\n\t\t\t\t\tlet type = 'seat'\r\n\t\t\t\t\tif (item.class.indexOf('StageNode') > -1) {\r\n\t\t\t\t\t\ttype = 'stage'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (item.class.indexOf('RegionNode') > -1 && item.class.indexOf('ShapeRegionNode')) {\r\n\t\t\t\t\t\ttype = 'region'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (item.class.indexOf('ShapeRegionNode') > -1) {\r\n\t\t\t\t\t\ttype = 'shapeRegion'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (item.class.indexOf('RowNode') > -1) {\r\n\t\t\t\t\t\ttype = 'row'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (item.class.indexOf('SeatNode') > -1) {\r\n\t\t\t\t\t\ttype = 'seat'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (type === 'stage') {\r\n\t\t\t\t\t\tthis.handleStage(item)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (type === 'region') {\r\n\t\t\t\t\t\tconsole.log('==region')\r\n\t\t\t\t\t\tthis.handleRegion(item)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (type === 'shapeRegion') {\r\n\t\t\t\t\t\tthis.handleShapeRegion(item)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (type === 'row') {\r\n\t\t\t\t\t\tthis.handleRow(item)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (type === 'seat') {\r\n\t\t\t\t\t\tthis.handleSeat(item)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tisDraw && this.canvasContext.draw();\r\n\t\t\t},\r\n\r\n\t\t\t// drawSeatMap() {\r\n\t\t\t// \t// 清空画布\r\n\t\t\t// \t// this.canvasContext.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\t\t\t// \tthis.canvasContext.clearRect(0, 0, 1000, 1000);\r\n\r\n\t\t\t// \t// 绘制座位\r\n\t\t\t// \tthis.seatData.forEach(seat => {\r\n\t\t\t// \t\tif (seat.type === 'rect') {\r\n\t\t\t// \t\t\tthis.canvasContext.beginPath();\r\n\t\t\t// \t\t\tthis.canvasContext.rect(seat.x, seat.y, seat.width, seat.height);\r\n\t\t\t// \t\t\tthis.canvasContext.setFillStyle(seat.status === 'available' ? 'green' : 'red');\r\n\t\t\t// \t\t\tthis.canvasContext.fill();\r\n\t\t\t// \t\t\tthis.canvasContext.closePath();\r\n\t\t\t// \t\t}\r\n\r\n\t\t\t// \t\tif (seat.type === 'circle') {\r\n\t\t\t// \t\t\tthis.canvasContext.beginPath();\r\n\t\t\t// \t\t\tthis.canvasContext.arc(seat.x, seat.y, seat.radius, 0, 2 * Math.PI);\r\n\t\t\t// \t\t\tthis.canvasContext.setFillStyle(seat.status === 'available' ? 'green' : 'red');\r\n\t\t\t// \t\t\tthis.canvasContext.fill();\r\n\t\t\t// \t\t\tthis.canvasContext.closePath();\r\n\t\t\t// \t\t}\r\n\t\t\t// \t});\r\n\r\n\t\t\t// \tif (this.selectedSeat) {\r\n\t\t\t// \t\tconst {\r\n\t\t\t// \t\t\tx,\r\n\t\t\t// \t\t\ty,\r\n\t\t\t// \t\t\tradius\r\n\t\t\t// \t\t} = this.selectedSeat\r\n\t\t\t// \t\tthis.canvasContext.beginPath();\r\n\t\t\t// \t\tthis.canvasContext.arc(x, y, radius, 0, 2 * Math.PI);\r\n\t\t\t// \t\tthis.canvasContext.setFillStyle('blue');\r\n\t\t\t// \t\tthis.canvasContext.fill();\r\n\t\t\t// \t\tthis.canvasContext.closePath();\r\n\t\t\t// \t}\r\n\r\n\r\n\t\t\t// \t// 绘制完成\r\n\r\n\t\t\t// \tthis.canvasContext.draw();\r\n\t\t\t// },\r\n\t\t\tzoomIn() {\r\n\t\t\t\tconsole.log('双击放大')\r\n\r\n\t\t\t},\r\n\r\n\t\t\tonCanvasTouchStart(e) {\r\n\t\t\t\tconst event = e\r\n\t\t\t\tconsole.log(e.touches, '==touchesStart')\r\n\t\t\t\tthis.isMoving = false;\r\n\r\n\t\t\t\tuni.canvasToTempFilePath({\r\n\t\t\t\t\tx: 0,\r\n\t\t\t\t\ty: 0,\r\n\t\t\t\t\t// width: 1000,\r\n\t\t\t\t\t// height: 1000,\r\n\t\t\t\t\t// destWidth: 1000,\r\n\t\t\t\t\t// destHeight: 1000,\r\n\t\t\t\t\tcanvasId: 'seatCanvas',\r\n\t\t\t\t\tsuccess: (res) => {\r\n\t\t\t\t\t\t// 在H5平台下，tempFilePath 为 base64\r\n\t\t\t\t\t\tconsole.log(res.tempFilePath, '==生成base64')\r\n\t\t\t\t\t\tthis.tempImg = res.tempFilePath\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tif (e.touches.length >= 2) {\r\n\t\t\t\t\t// 计算两点之间的距离\r\n\t\t\t\t\tlet xMove = event.touches[0].clientX - event.touches[1].clientX;\r\n\t\t\t\t\tlet yMove = event.touches[0].clientY - event.touches[1].clientY;\r\n\t\t\t\t\tinitialDistance = Math.sqrt(xMove * xMove + yMove * yMove);\r\n\t\t\t\t\tconsole.log('缩放 2指间')\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// 获取触摸点坐标\r\n\t\t\t\tconst x = e.touches[0].x;\r\n\t\t\t\tconst y = e.touches[0].y;\r\n\t\t\t\tthis.touchStartX = x;\r\n\t\t\t\tthis.touchStartY = y;\r\n\t\t\t\tconsole.log(x, y, '==xy')\r\n\t\t\t\tlet currentTime = e.timeStamp;\r\n\t\t\t\tlet gapTime = currentTime - (this.lastTapTime ? this.lastTapTime : 0);\r\n\t\t\t\t// 判断是否为双击（两次点击间隔小于300ms）\r\n\t\t\t\tif (gapTime < 300 && Math.abs(this.lastTapPos.x - e.touches[0].x) < 10 && Math.abs(this.lastTapPos.y - e\r\n\t\t\t\t\t\t.touches[0].y) < 10) {\r\n\t\t\t\t\tconsole.log('double tap');\r\n\r\n\r\n\t\t\t\t\t// // 根据缩放比例计算真实坐标\r\n\t\t\t\t\tlet offsetX = x / this.scaleRatio;\r\n\t\t\t\t\tlet offsetY = y / this.scaleRatio;\r\n\t\t\t\t\tconst cOffsetX = -offsetX + this.wrapperBox.width / 2;\r\n\t\t\t\t\tconst cOffsetY = -offsetY + this.wrapperBox.height / 2;\r\n\t\t\t\t\tthis.canvasContext.translate(cOffsetX, cOffsetY);\r\n\t\t\t\t\tthis.drawData(false)\r\n\t\t\t\t\tthis.canvasContext.scale(1)\r\n\t\t\t\t\tthis.canvasContext.draw();\r\n\r\n\t\t\t\t\tconsole.log(this.wrapperStyleBase, '双击放大偏移',\r\n\t\t\t\t\t\tcOffsetX, cOffsetY)\r\n\t\t\t\t\t// this.canvasWrapperStyle =\r\n\t\t\t\t\t// \t`${this.wrapperStyleBase}; transform: translate(${cOffsetX}px, ${cOffsetY}px) scale(${1})`\r\n\t\t\t\t\tthis.lastTapTime = null;\r\n\t\t\t\t\tthis.lastTapPos = {\r\n\t\t\t\t\t\tx: null,\r\n\t\t\t\t\t\ty: null\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('chufa')\r\n\t\t\t\t\tthis.lastTapTime = currentTime;\r\n\t\t\t\t\tthis.lastTapPos = {\r\n\t\t\t\t\t\tx: e.touches[0].x,\r\n\t\t\t\t\t\ty: e.touches[0].y\r\n\t\t\t\t\t};\r\n\t\t\t\t\tconsole.log(this.lastTapPos, '===lastTables')\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// // 判断是否点击到座位\r\n\t\t\t\t// const clickedSeat = this.seatData.find(seat => {\r\n\t\t\t\t// \tconst distance = Math.sqrt(Math.pow(x - seat.x, 2) + Math.pow(y - seat.y, 2));\r\n\t\t\t\t// \treturn distance <= seat.radius;\r\n\t\t\t\t// });\r\n\r\n\t\t\t\t// // 更新选中的座位\r\n\t\t\t\t// this.selectedSeat = clickedSeat;\r\n\t\t\t\t// console.log(this.selectedSeat, '圆形点击')\r\n\t\t\t\t// this.drawSeatMap();\r\n\r\n\r\n\t\t\t},\r\n\t\t\tdrawCanvas() {\r\n\t\t\t\tconsole.log('drawCanvas', this.tempImg)\r\n\t\t\t\tif (this.tempImg) {\r\n\t\t\t\t\tconsole.log('===this.tempImg')\r\n\r\n\t\t\t\t\tthis.canvasContext.translate(this.offsetX, this.offsetY);\r\n\r\n\t\t\t\t\tthis.canvasContext.drawImage(this.tempImg, 0, 0, this.canvasInfo.width, this.canvasInfo\r\n\t\t\t\t\t\t.height); //假设我们想让它始终显示在主画布中央位置，那就需要计算一下位置。\r\n\t\t\t\t\tthis.canvasContext.draw();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// if (!this.isMoving) return;\r\n\r\n\t\t\t\tthis.canvasContext.translate(this.offsetX, this.offsetY);\r\n\t\t\t\tthis.canvasContext.scale(this.scaleRatio, this.scaleRatio)\r\n\t\t\t\tthis.drawData(false)\r\n\r\n\t\t\t\t// console.log(scaleRatio)\r\n\t\t\t\tthis.canvasContext.draw();\r\n\t\t\t},\r\n\t\t\tonCanvasTouchMove: throttle(function(event) {\r\n\t\t\t\tconsole.log('touchMove')\r\n\t\t\t\tthis.isMoving = true\r\n\t\t\t\tif (event.touches.length == 1) {\r\n\t\t\t\t\tthis.touchMoveX = event.touches[0].x;\r\n\t\t\t\t\tthis.touchMoveY = event.touches[0].y;\r\n\r\n\t\t\t\t\tconst offsetX = this.touchMoveX - this.touchStartX;\r\n\t\t\t\t\tconst offsetY = this.touchMoveY - this.touchStartY;\r\n\t\t\t\t\tif (Math.abs(offsetX) > 10 || Math.abs(offsetY) > 10) {\r\n\t\t\t\t\t\tconsole.log('移动')\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconsole.log(offsetX, offsetY, '===offset')\r\n\t\t\t\t\tthis.offsetX += offsetX;\r\n\t\t\t\t\tthis.offsetY += offsetY;\r\n\t\t\t\t\tthis.touchStartX = this.touchMoveX;\r\n\t\t\t\t\tthis.touchStartY = this.touchMoveY;\r\n\t\t\t\t\tthis.drawCanvas();\r\n\t\t\t\t}\r\n\t\t\t\tif (event.touches.length >= 2) {\r\n\t\t\t\t\tlet xMove = event.touches[0].x - event.touches[1].x;\r\n\t\t\t\t\tlet yMove = event.touches[0].y - event.touches[1].y;\r\n\r\n\t\t\t\t\t// 新的触摸点间距离\r\n\t\t\t\t\tlet distance = Math.sqrt(xMove * xMove + yMove * yMove);\r\n\r\n\t\t\t\t\t// 计算新旧触摸点间距离差异, 得到缩放值\r\n\t\t\t\t\tscale *= distance / initialDistance;\r\n\r\n\t\t\t\t\t// 确保scale值在  范围内 \r\n\t\t\t\t\tscale = Math.max(this.scaleRatio, Math.min(scale, 1));\r\n\r\n\r\n\r\n\t\t\t\t\t// canvas.style.transform = `scale(${scale})`;\r\n\t\t\t\t\t// 处理缩放\r\n\t\t\t\t\t// this.drawData(false)\r\n\t\t\t\t\tconst offsetX = -this.wrapperBox.width / 2 * (scale - 1)\r\n\t\t\t\t\tconst offsetY = -this.wrapperBox.height / 2 * (scale - 1)\r\n\r\n\t\t\t\t\t// \tthis.canvasWrapperStyle =\r\n\t\t\t\t\t// \t\t`${this.wrapperStyleBase}; transform: translate(${offsetX}px, ${offsetY}px) scale(${scale})`\r\n\t\t\t\t\t// this.canvasContext.scale(scale, scale)\r\n\t\t\t\t\t// this.canvasStyle =\r\n\t\t\t\t\t// \t` width: ${this.canvasInfo.width}px; height: ${this.canvasInfo.height}px; left: ${offsetX}px; top: ${offsetY}px;`\r\n\t\t\t\t\t// this.canvasContext.draw()\r\n\t\t\t\t\t// 更新initialDistance为当前distance\r\n\t\t\t\t\tinitialDistance = distance;\r\n\r\n\t\t\t\t}\r\n\t\t\t}, 200),\r\n\t\t\tonCanvasTouchEnd() {\r\n\t\t\t\tconsole.log('touchEnd')\r\n\t\t\t\tthis.isMoving = false;\r\n\t\t\t\t// setTimeout(() => {\r\n\t\t\t\t// \tthis.isMoving = false\r\n\t\t\t\t// }, 1000)\r\n\t\t\t\tthis.tempImg = null;\r\n\t\t\t\tthis.drawCanvas();\r\n\t\t\t\t// this.isMoveing = false\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\t.content {\r\n\t\twidth: 750rpx;\r\n\t\theight: 400rpx;\r\n\t\toverflow: scroll;\r\n\t\tposition: relative;\r\n\r\n\t\t/* display: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center; */\r\n\t\t.canvas-wrapper {\r\n\t\t\tposition: absolute;\r\n\t\t\tleft: 0;\r\n\t\t\ttop: 0;\r\n\t\t\ttransform-origin: left top;\r\n\t\t\tborder: 1px solid blue;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t.canvas-box {\r\n\t\tposition: absolute;\r\n\t\tleft: 0;\r\n\t\ttop: 0;\r\n\t}\r\n</style>","import mod from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-2!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-3!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/sass-loader/dist/cjs.js??ref--8-oneOf-1-4!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-5!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=style&index=0&id=57280228&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-2!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-3!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/sass-loader/dist/cjs.js??ref--8-oneOf-1-4!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--8-oneOf-1-5!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./index.vue?vue&type=style&index=0&id=57280228&lang=scss&scoped=true&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1702131869721\n      var cssReload = require(\"/Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"../../\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}